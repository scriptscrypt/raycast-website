@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  color-scheme: dark;
}

body {
  @apply bg-background text-foreground;
}

@layer components {
  .glass {
    @apply relative overflow-hidden;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.048),
      rgba(255, 255, 255, 0.024) 20%,
      rgba(255, 255, 255, 0.004) 50%,
      rgba(255, 255, 255, 0.06) 100%
    );
    backdrop-filter: blur(12px);
    box-shadow: 
      0 4px 24px -1px rgba(0, 0, 0, 0.1),
      0 0 1px 0 rgba(255, 255, 255, 0.12) inset,
      0 0 20px rgba(255, 255, 255, 0.02);
    transition: transform 0.2s ease-out;
    transform: perspective(1000px) rotateX(var(--rotate-x, 0deg)) rotateY(var(--rotate-y, 0deg));
  }

  .glass::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.12),
      rgba(255, 255, 255, 0.04) 20%,
      rgba(255, 255, 255, 0.02) 50%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  /* Animated background */
  .glass::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      800px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.06),
      transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
  }

  /* Border effect */
  .glass::after {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: radial-gradient(
      600px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.16),
      transparent 40%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .glass:hover::before,
  .glass:hover::after {
    opacity: 1;
  }
  
  .glass-button {
    @apply relative overflow-hidden;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.06),
      rgba(255, 255, 255, 0.032) 20%,
      rgba(255, 255, 255, 0.008) 50%,
      rgba(255, 255, 255, 0.06) 100%
    );
    backdrop-filter: blur(12px);
    box-shadow: 
      0 4px 24px -1px rgba(0, 0, 0, 0.1),
      0 0 1px 0 rgba(255, 255, 255, 0.12) inset,
      0 0 20px rgba(255, 255, 255, 0.02);
    transition: transform 0.2s ease-out;
    transform: perspective(1000px) rotateX(var(--rotate-x, 0deg)) rotateY(var(--rotate-y, 0deg));
  }

  .glass-button::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      600px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.08),
      transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
  }

  .glass-button::after {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: radial-gradient(
      400px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.16),
      transparent 40%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .glass-button:hover::before,
  .glass-button:hover::after {
    opacity: 1;
  }

  .glass-pill {
    @apply relative overflow-hidden;
    background: linear-gradient(
      135deg,
      rgba(30, 58, 138, 0.1),
      rgba(30, 58, 138, 0.06) 20%,
      rgba(30, 58, 138, 0.02) 50%,
      rgba(30, 64, 175, 0.08) 100%
    );
    backdrop-filter: blur(12px);
    box-shadow: 
      0 4px 24px -1px rgba(0, 0, 0, 0.1),
      0 0 1px 0 rgba(30, 64, 175, 0.12) inset,
      0 0 20px rgba(30, 64, 175, 0.06);
    transition: transform 0.2s ease-out;
    transform: perspective(1000px) rotateX(var(--rotate-x, 0deg)) rotateY(var(--rotate-y, 0deg));
  }

  .glass-pill::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      400px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(30, 58, 138, 0.1),
      transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
  }

  .glass-pill::after {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: radial-gradient(
      300px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(30, 64, 175, 0.16),
      transparent 40%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .glass-pill:hover::before,
  .glass-pill:hover::after {
    opacity: 1;
  }

  .glass-tabs {
    @apply relative overflow-hidden;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.04),
      rgba(255, 255, 255, 0.02) 20%,
      rgba(255, 255, 255, 0.002) 50%,
      rgba(255, 255, 255, 0.04) 100%
    );
    backdrop-filter: blur(12px);
    box-shadow: 
      0 2px 12px -1px rgba(0, 0, 0, 0.1),
      0 0 1px 0 rgba(255, 255, 255, 0.12) inset;
  }

  .glass-tabs::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.08),
      rgba(255, 255, 255, 0.03) 20%,
      rgba(255, 255, 255, 0.01) 50%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  /* Spring animations */
  @keyframes springIn {
    0% {
      transform: scale(0.8);
      opacity: 0;
    }
    40% {
      transform: scale(1.1);
      opacity: 0.8;
    }
    70% {
      transform: scale(0.95);
      opacity: 0.9;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes springOut {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    100% {
      transform: scale(0.8);
      opacity: 0;
    }
  }

  .spring-transition {
    transition-timing-function: cubic-bezier(0.68, -0.6, 0.32, 1.6);
    transition-duration: 600ms;
  }

  .spring-in {
    animation: springIn 600ms cubic-bezier(0.68, -0.6, 0.32, 1.6) forwards;
  }

  .spring-out {
    animation: springOut 300ms cubic-bezier(0.68, -0.6, 0.32, 1.6) forwards;
  }
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}
