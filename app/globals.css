@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    color-scheme: dark;
  }
}

body {
  @apply bg-background text-foreground;
}

@layer components {
  .glass {
    @apply rounded-xl border border-white/10 bg-white/5 backdrop-blur-md;
    box-shadow: 0 0 40px rgba(0, 0, 0, 0.2),
      0 0 1px 0 rgba(255, 255, 255, 0.12) inset,
      0 0 20px rgba(255, 255, 255, 0.02);
  }

  .glass::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.12),
      rgba(255, 255, 255, 0.04) 20%,
      rgba(255, 255, 255, 0.02) 50%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  /* Animated background */
  .glass::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      800px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.06),
      transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
  }

  /* Border effect */
  .glass::after {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: radial-gradient(
      600px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.16),
      transparent 40%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .glass:hover::before,
  .glass:hover::after {
    opacity: 1;
  }
  
  .glass-button {
    @apply rounded-xl border border-white/10 bg-white/10 backdrop-blur-md;
    transition: all 0.1s ease;
  }

  .glass-button::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      600px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.08),
      transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
  }

  .glass-button::after {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: radial-gradient(
      400px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.16),
      transparent 40%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .glass-button:hover::before,
  .glass-button:hover::after {
    opacity: 1;
  }

  .glass-pill {
    @apply rounded-full border border-white/10 bg-white/10 backdrop-blur-md;
    box-shadow: 0 0 1px 0 rgba(255, 255, 255, 0.12) inset,
      0 0 20px rgba(255, 255, 255, 0.02);
  }

  .glass-pill::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      400px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(30, 58, 138, 0.1),
      transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
  }

  .glass-pill::after {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: radial-gradient(
      300px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(30, 64, 175, 0.16),
      transparent 40%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .glass-pill:hover::before,
  .glass-pill:hover::after {
    opacity: 1;
  }

  .glass-tabs {
    @apply rounded-xl border border-white/10 bg-black/20 backdrop-blur-md;
  }

  .glass-tabs::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.08),
      rgba(255, 255, 255, 0.03) 20%,
      rgba(255, 255, 255, 0.01) 50%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  /* Spring animations */
  @keyframes springIn {
    0% {
      transform: scale(0.8);
      opacity: 0;
    }
    40% {
      transform: scale(1.1);
      opacity: 0.8;
    }
    70% {
      transform: scale(0.95);
      opacity: 0.9;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes springOut {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    100% {
      transform: scale(0.8);
      opacity: 0;
    }
  }

  @keyframes revealFromLeft {
    0% {
      transform: translateY(-100%);
      opacity: 0;
    }
    30% {
      opacity: 0.3;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .reveal-animation {
    animation: revealFromLeft 0.8s cubic-bezier(0.33, 1, 0.68, 1) forwards;
    opacity: 0;
    will-change: transform, opacity;
  }

  .reveal-delay-1 {
    animation-delay: 0s;
  }

  .reveal-delay-2 {
    animation-delay: 0.2s;
  }

  .reveal-delay-3 {
    animation-delay: 0.6s;
  }

  .spring-transition {
    transition-timing-function: cubic-bezier(0.68, -0.6, 0.32, 1.6);
    transition-duration: 600ms;
  }

  .spring-in {
    animation: springIn 600ms cubic-bezier(0.68, -0.6, 0.32, 1.6) forwards;
  }

  .spring-out {
    animation: springOut 300ms cubic-bezier(0.68, -0.6, 0.32, 1.6) forwards;
  }

  .card-border {
    transition: transform 0.2s ease-out;
    transform: perspective(1000px) rotateX(var(--rotate-x, 0deg)) rotateY(var(--rotate-y, 0deg));
  }

  .card-border-glow {
    @apply transition-opacity duration-300;
    opacity: 0;
  }

  .card-border:hover .card-border-glow {
    opacity: 1;
  }

  /* Keyboard animations */
  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes keyPress {
    0% {
      transform: translateY(0);
      filter: brightness(1);
    }
    50% {
      transform: translateY(2px);
      filter: brightness(1.2);
    }
    100% {
      transform: translateY(0);
      filter: brightness(1);
    }
  }

  @keyframes ripple {
    0% {
      transform: scale(0);
      opacity: 0.8;
    }
    100% {
      transform: scale(4);
      opacity: 0;
    }
  }

  .keyboard-container {
    @apply relative w-full h-full;
    perspective: 1000px;
  }

  .key-glow {
    @apply absolute w-24 h-24 rounded-full pointer-events-none;
    background: radial-gradient(
      circle at center,
      rgba(255, 255, 255, 0.15) 0%,
      rgba(255, 255, 255, 0.1) 20%,
      transparent 70%
    );
    transform: translate(-50%, -50%);
    transition: all 0.3s ease;
    filter: blur(8px);
    opacity: 0;
  }

  .key-glow.active {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.2);
    background: radial-gradient(
      circle at center,
      rgba(255, 255, 255, 0.3) 0%,
      rgba(255, 255, 255, 0.15) 30%,
      transparent 70%
    );
  }

  .key-glow.hover {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(1.1);
  }

  .key-ripple {
    @apply absolute w-32 h-32 rounded-full pointer-events-none;
    background: radial-gradient(
      circle at center,
      rgba(255, 255, 255, 0.2) 0%,
      rgba(255, 255, 255, 0.1) 20%,
      transparent 70%
    );
    transform: translate(-50%, -50%) scale(0);
    animation: ripple 1s ease-out forwards;
  }

  @keyframes ripple {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0;
    }
  }

  .key {
    @apply absolute cursor-pointer transition-all duration-200;
    transform-style: preserve-3d;
    transform: translateZ(0);
  }

  .key:hover {
    transform: translateZ(2px);
    filter: brightness(1.2);
  }

  .key.pressed {
    transform: translateZ(-2px);
    filter: brightness(0.8);
    transition: all 0.1s ease;
  }

  .keyboard-key {
    transition: transform 0.1s ease-out;
    stroke: rgba(128, 128, 128, 0.2);
    stroke-width: 1px;
  }

  .keyboard-key:hover {
    transform: translateY(-2px);
    filter: drop-shadow(0 0 8px rgba(173, 216, 230, 0.4));
  }

  .key-text {
    fill: #eaeaea;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.5),
      0 0 10px rgba(173, 216, 230, 0.7);
    pointer-events: none;
  }
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

#command-key:hover, #space-key:hover {
  transform: translateY(-2px);
}

#command-key:active,
#space-key:active {
  transform: translateY(1px);
}

@layer utilities {
  .spring-transition {
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .card-border {
    transition: transform 0.2s ease-out;
    transform: perspective(1000px) rotateX(var(--rotate-x, 0deg)) rotateY(var(--rotate-y, 0deg));
  }

  .key-group {
    transition: transform 0.1s ease-out;
  }

  .key-group:hover {
    transform: translateY(-2px);
  }

  .key-group:hover .keyboard-key {
    filter: drop-shadow(0 0 8px rgba(173, 216, 230, 0.4));
  }

  #command-key-left .keyboard-key,
  #space-key .keyboard-key {
    filter: drop-shadow(0 0 12px #2563eb);
    animation: pulse-glow 2s infinite alternate;
  }

  @keyframes pulse-glow {
    from {
      filter: drop-shadow(0 0 8px #2563eb);
    }
    to {
      filter: drop-shadow(0 0 16px #2563eb);
    }
  }

  .keyboard-key {
    stroke: rgba(128, 128, 128, 0.2);
    stroke-width: 1px;
    transition: filter 0.1s ease-out;
  }

  .key-text {
    fill: #eaeaea;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.5),
      0 0 10px rgba(173, 216, 230, 0.7);
    pointer-events: none;
  }

  #command-key-left:active,
  #command-key-right:active,
  #space-key:active {
    transform: translateY(1px);
  }
}
